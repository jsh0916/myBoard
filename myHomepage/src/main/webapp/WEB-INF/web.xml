<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_3_1.xsd" version="3.1">
  
  <filter>
  	<filter-name>characterEncoding</filter-name>
  	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  	<init-param>
  		<param-name>encoding</param-name>
  		<param-value>UTF-8</param-value>
  	</init-param>
  </filter>
  
  <filter-mapping>
  	<filter-name>characterEncoding</filter-name>
  	<url-pattern>*.do</url-pattern>
  </filter-mapping>
  
  <filter>
  	<filter-name>springSecurityFilterChain</filter-name>
  	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  
  <filter-mapping>
  	<filter-name>springSecurityFilterChain</filter-name>
  	<url-pattern>/</url-pattern>
  </filter-mapping>
  
  <!-- DispatcherServlet이 생성되어 presentation-layer.xml 파일을 읽고 스프링 컨테이너를 구동하여 Controller 객체들이 메모리에 생성되기 전에 
  		src/main/resources 에 있는 applicationContext.xml 파일을 읽어 비즈니스 컴포넌트들을 메모리에 생성하기 위해 사용	
  		ContextLoaderListener 클래스는 서블릿 컨테이너가 web.xml 파일을 읽어 구동될 때 자동으로 메모리에 생성됨. 
  		기본적으로는 /WEB-INF/applicationContext.xml 에 위치함. -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>
  		classpath:applicationContext.xml
  		/WEB-INF/security-context.xml
  	</param-value>
  </context-param>
  
  <listener>
  	<listener-class>
  		org.springframework.web.context.ContextLoaderListener
  	</listener-class>
  </listener>
  
  <!-- Client 의 모든 *.do 요청을 DispatcherServlet 클래스의 객체가 처리하기 위한 설정 -->
  <!-- DispatcherSErvlet은 Spring 컨테이너를 구동할 때 web.xml 파일에 등록된 servlet-name 뒤에 '-servlet.xml'을 붙여서 스프링 설정파일을 찾는다. -->
  <servlet>
    <servlet-name>action</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>/WEB-INF/config/presentation-layer.xml</param-value>
  	</init-param>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>*.do</url-pattern>
<!--     <url-pattern>/</url-pattern> -->
  </servlet-mapping>
  
  <welcome-file-list>
        <welcome-file>index.html</welcome-file>
  </welcome-file-list>
  
  <!-- File Upload 관련 -->
  <!-- <multipart-config>
  	<location>C:\\upload</location>
  	<max-file-size>20971520</max-file-size> 1MB * 20, 업로드되는 파일의 최대크기
  	<max-request-size>41943040</max-request-size> 40MB, 한번에 올릴 수 있는 최대 크기
  	<file-size-threshold>20971520</file-size-threshold> 20MB, 특정 사이즈의 메모리 사용
  </multipart-config> -->
   
</web-app>